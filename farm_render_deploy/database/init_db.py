"""
–°–∫—Ä–∏–ø—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
–°—Ç–≤–æ—Ä—é—î —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –¥–æ–¥–∞—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
"""

from models import create_tables, SessionLocal, Sow, WeeklyRecord
from datetime import date, timedelta


def add_sample_data():
    """
    –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–∫–ª–∞–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    """
    db = SessionLocal()
    
    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –≤–∂–µ –¥–∞–Ω—ñ
        existing_sows = db.query(Sow).count()
        existing_records = db.query(WeeklyRecord).count()
        
        if existing_sows > 0 or existing_records > 0:
            print("‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≤–∂–µ –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω—ñ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö.")
            return
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–∫–ª–∞–¥–Ω–∏—Ö —Å–≤–∏–Ω–æ–º–∞—Ç–æ–∫
        sows_data = [
            {"number": "001", "birth_date": date(2022, 1, 15), "status": "–∞–∫—Ç–∏–≤–Ω–∞", "notes": "–í–∏—Å–æ–∫–æ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞"},
            {"number": "002", "birth_date": date(2022, 3, 20), "status": "–∞–∫—Ç–∏–≤–Ω–∞", "notes": "–ü–µ—Ä—à–æ–æ–ø–æ—Ä–æ—Å–∫–∞"},
            {"number": "003", "birth_date": date(2021, 11, 10), "status": "–∞–∫—Ç–∏–≤–Ω–∞", "notes": ""},
            {"number": "004", "birth_date": date(2022, 5, 5), "status": "–≤–∏–±—Ä–∞–∫—É–≤–∞–Ω–∞", "notes": "–í–∏–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ –≤—ñ–∫"},
            {"number": "005", "birth_date": date(2022, 2, 28), "status": "–∞–∫—Ç–∏–≤–Ω–∞", "notes": "–î–æ–±—Ä–µ –∑–¥–æ—Ä–æ–≤'—è"},
        ]
        
        for sow_data in sows_data:
            sow = Sow(**sow_data)
            db.add(sow)
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–∫–ª–∞–¥–Ω–∏—Ö —Ç–∏–∂–Ω–µ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤
        today = date.today()
        for i in range(8):  # –û—Å—Ç–∞–Ω–Ω—ñ 8 —Ç–∏–∂–Ω—ñ–≤
            week_date = today - timedelta(weeks=i)
            record = WeeklyRecord(
                week_start_date=week_date,
                farrowings=3 + (i % 3),
                piglets_born_alive=30 + (i * 2),
                piglets_born_dead=2 + (i % 2),
                notes=f"–¢–∏–∂–¥–µ–Ω—å {i+1}" if i < 3 else None
            )
            record.calculate_survival_rate()
            db.add(record)
        
        db.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print(f"   - –î–æ–¥–∞–Ω–æ {len(sows_data)} —Å–≤–∏–Ω–æ–º–∞—Ç–æ–∫")
        print(f"   - –î–æ–¥–∞–Ω–æ 8 —Ç–∏–∂–Ω–µ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö: {e}")
        db.rollback()
    finally:
        db.close()


def main():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    """
    print("üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
    create_tables()
    
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    print("\nüìù –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...")
    add_sample_data()
    
    print("\n‚ú® –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫ –∫–æ–º–∞–Ω–¥–æ—é: python run.py")


if __name__ == "__main__":
    main()
